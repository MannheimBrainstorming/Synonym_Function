	//input: a string such as USA
	//output: an array of the sysnonym words
	import java.io.File;
	import java.io.IOException;
	import java.net.URL;
	import java.util.Iterator;
	import java.util.List;
	
	import edu.mit.jwi.Dictionary;
	import edu.mit.jwi.IDictionary;
	import edu.mit.jwi.item.IIndexWord;
	import edu.mit.jwi.item.ISynset;
	import edu.mit.jwi.item.ISynsetID;
	import edu.mit.jwi.item.IWord;
	import edu.mit.jwi.item.IWordID;
	import edu.mit.jwi.item.POS;
	import edu.mit.jwi.item.Pointer;

	public static String[] Synonyms(String text) throws IOException {
		String wnhome = "/usr/local/WordNet-3.0/";
		String path = wnhome + File.separator + "dict";
		URL url  = new URL ("file", null, path);
		IDictionary dict = new Dictionary(url);
		dict.open();
		IIndexWord idxWord = dict.getIndexWord("USA", POS.NOUN);
		//getting the default meaning of the word (the index 0 represent the first sense of the word
		IWordID wordID = idxWord.getWordIDs().get(0);
		IWord word = dict.getWord(wordID);
		//getting synonyms
		ISynset synset = word.getSynset();
		int array_counter = 0;
		for (IWord w : synset.getWords()){
			array_counter +=1;
		}
		String[] SynArray = new String[array_counter];
		int i=0;
		for (IWord w : synset.getWords()){
			SynArray[i]=w.getLemma();
			i +=1;
		}
		for ( i=0; i<array_counter;i++){
			SynArray[i]=SynArray[i].replaceAll("_", " ");
		}		
		return SynArray;
	}
